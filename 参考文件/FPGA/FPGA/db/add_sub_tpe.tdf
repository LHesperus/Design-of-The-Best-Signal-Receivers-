--lpm_add_sub CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Stratix II" LPM_WIDTH=65 add_sub dataa datab result
--VERSION_BEGIN 9.0 cbx_cycloneii 2008:05:19:10:57:37:SJ cbx_lpm_add_sub 2008:12:09:22:11:50:SJ cbx_mgl 2009:01:29:16:12:07:SJ cbx_stratix 2008:09:18:16:08:35:SJ cbx_stratixii 2008:11:14:16:08:42:SJ  VERSION_END


-- Copyright (C) 1991-2009 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION stratixii_lcell_comb (cin, dataa, datab, datac, datad, datae, dataf, datag, sharein)
WITH ( EXTENDED_LUT, LUT_MASK, SHARED_ARITH)
RETURNS ( combout, cout, shareout, sumout);

--synthesis_resources = lut 67 
SUBDESIGN add_sub_tpe
( 
	add_sub	:	input;
	dataa[64..0]	:	input;
	datab[64..0]	:	input;
	result[64..0]	:	output;
) 
VARIABLE 
	add_sub_buf_ina[0..0] : stratixii_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "0000AAAA00005555",
			SHARED_ARITH = "off"
		);
	add_sub_buf_outa[0..0] : stratixii_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "000055550000AAAA",
			SHARED_ARITH = "off"
		);
	add_sub_cella[64..0] : stratixii_lcell_comb
		WITH (
			EXTENDED_LUT = "off",
			LUT_MASK = "00000FF00000FF00",
			SHARED_ARITH = "off"
		);
	lsb_cin_wire[0..0]	: WIRE;

BEGIN 
	add_sub_buf_ina[].cin = ( add_sub_cella[47].cout);
	add_sub_buf_ina[].dataa = B"1";
	add_sub_buf_outa[].cin = B"0";
	add_sub_buf_outa[].dataa = ( add_sub_buf_ina[0].sumout);
	add_sub_cella[].cin = ( add_sub_cella[63..48].cout, add_sub_buf_outa[0].cout, add_sub_cella[46..0].cout, lsb_cin_wire[]);
	add_sub_cella[].datac = add_sub;
	add_sub_cella[].datad = dataa[];
	add_sub_cella[].dataf = datab[];
	lsb_cin_wire[] = (! add_sub);
	result[] = ( add_sub_cella[64..0].sumout);
END;
--VALID FILE
